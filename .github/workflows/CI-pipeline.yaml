name: CI/CD Pipeline - Build and Deploy to ArgoCD

on:
  push:
    branches:
      - main
    paths:
      - 'Code_and_Dockerfile/**'
      - 'Kubernetes/**'
  workflow_dispatch: # Allows manual triggering

env:
  DOCKER_IMAGE_NAME: todo-node-app
  ARGOCD_REPO: osalem192/FortStak_ArgoCD

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate image tag
        id: image-tag
        run: |
          TAG="${{ github.run_number }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "full-image-name=${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:$TAG" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Code_and_Dockerfile
          push: true
          tags: ${{ steps.image-tag.outputs.full-image-name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update Kubernetes deployment
        run: |
          # Update the image in the deployment file
          sed -i "s|image:.*|image: ${{ steps.image-tag.outputs.full-image-name }}|" Kubernetes/app-deployment.yaml
          
          # Display the updated deployment for verification
          echo "Updated deployment file:"
          cat Kubernetes/app-deployment.yaml

      - name: Checkout ArgoCD repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.ARGOCD_REPO }}
          token: ${{ secrets.PAT_TOKEN }}
          path: argocd-repo

      - name: Copy updated deployment to ArgoCD repo
        run: |
          cp Kubernetes/app-deployment.yaml argocd-repo/
          echo "Copied deployment file to ArgoCD repository"

      - name: Commit and push to ArgoCD repository
        run: |
          cd argocd-repo
          git config user.name "github-actions"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Set up git remote with PAT token for authentication
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ env.ARGOCD_REPO }}.git
          
          # Check if there are changes to commit
          if [[ -n $(git status --porcelain) ]]; then
            git add .
            git commit -m "Update deployment image to ${{ steps.image-tag.outputs.full-image-name }}"
            git push origin main
            echo "Successfully pushed to ArgoCD repository"
          else
            echo "No changes to commit"
          fi

      - name: Output deployment information
        run: |
          echo "ðŸš€ Deployment Summary:"
          echo "Image: ${{ steps.image-tag.outputs.full-image-name }}"
          echo "Tag: ${{ steps.image-tag.outputs.tag }}"
          echo "ArgoCD Repository: ${{ env.ARGOCD_REPO }}"
          echo "Deployment file updated and pushed to ArgoCD repository" 